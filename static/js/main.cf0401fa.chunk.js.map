{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/auth.js","components/Header.js","components/Auth.js","components/UserProfile.js","App.js","store/counter.js","store/index.js","index.js","components/Auth.module.css"],"names":["module","exports","authSlice","createSlice","name","initialState","isAuthenticated","reducers","login","state","logout","authReducer","reducer","authActions","actions","Header","useSelector","auth","dispatch","useDispatch","className","classes","header","href","onClick","Auth","useState","enteredEmail","setEnteredEmail","emailTouched","setEmailTouched","enteredPassword","setEnteredPassword","passwordTouched","setPasswordTouched","enteredEmailIsValid","includes","emailIsInvalid","enteredPasswordIsValid","length","passwordIsInvalid","formIsValid","emailInputClasses","control","invalid","passwordInputClasses","onSubmit","event","preventDefault","htmlFor","type","id","onChange","target","value","onBlur","error","disabled","UserProfile","profile","App","counterSlice","counter","showCounter","increment","decrement","increase","action","payload","toggleCounter","counterReducer","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf0401fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jcvAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2er2_\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false;\r\n        },\r\n    },\r\n});\r\n\r\nconst authReducer = authSlice.reducer;\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authReducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authActions } from '../store/auth';\nimport classes from './Header.module.css';\n\nconst Header = () => {\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const logoutHandler = () => {\n        dispatch(authActions.logout());\n    };\n\n    return (\n        <header className={classes.header}>\n            <h1>Redux Auth</h1>\n            {isAuthenticated && (\n                <nav>\n                    <ul>\n                        <li>\n                            <a href=\"/\">My Products</a>\n                        </li>\n                        <li>\n                            <a href=\"/\">My Sales</a>\n                        </li>\n                        <li>\n                            <button onClick={logoutHandler}>Logout</button>\n                        </li>\n                    </ul>\n                </nav>\n            )}\n        </header>\n    );\n};\n\nexport default Header;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from '../store/auth';\nimport classes from './Auth.module.css';\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n\n    const [enteredEmail, setEnteredEmail] = useState('');\n    const [emailTouched, setEmailTouched] = useState(false);\n\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordTouched, setPasswordTouched] = useState(false);\n\n    const enteredEmailIsValid = enteredEmail.includes('@');\n    const emailIsInvalid = !enteredEmailIsValid && emailTouched;\n\n    const enteredPasswordIsValid =\n        enteredPassword !== '' && enteredPassword.length >= 8;\n    const passwordIsInvalid = !enteredPasswordIsValid && passwordTouched;\n\n    let formIsValid = false;\n\n    if (enteredEmailIsValid && enteredPasswordIsValid) {\n        formIsValid = true;\n    }\n\n    const emailChangeHandler = (event) => {\n        setEnteredEmail(event.target.value);\n    };\n\n    const emailBlurHandler = () => {\n        setEmailTouched(true);\n    };\n\n    const passwordChangeHandler = (event) => {\n        setEnteredPassword(event.target.value);\n    };\n\n    const passwordBlurHandler = () => {\n        setPasswordTouched(true);\n    };\n\n    const loginHandler = (event) => {\n        event.preventDefault();\n        setEmailTouched(true);\n        setPasswordTouched(true);\n\n        if (!enteredEmailIsValid && !enteredPasswordIsValid) {\n            return;\n        }\n\n        dispatch(authActions.login());\n\n        setEmailTouched(false);\n        setPasswordTouched(false);\n    };\n\n    const emailInputClasses = `${classes.control} ${\n        emailIsInvalid ? classes.invalid : ''\n    }`;\n    const passwordInputClasses = `${classes.control} ${\n        passwordIsInvalid ? classes.invalid : ''\n    }`;\n\n    return (\n        <main className={classes.auth}>\n            <section>\n                <form onSubmit={loginHandler}>\n                    <div className={emailInputClasses}>\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            onChange={emailChangeHandler}\n                            onBlur={emailBlurHandler}\n                        />\n                        {emailIsInvalid && (\n                            <p className={classes.error}>\n                                <strong>Please enter a valid email.</strong>\n                            </p>\n                        )}\n                    </div>\n                    <div className={passwordInputClasses}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={passwordChangeHandler}\n                            onBlur={passwordBlurHandler}\n                        />\n                    </div>\n                    {passwordIsInvalid && (\n                        <p className={classes.error}>\n                            <strong>\n                                Please enter a password of at least 8\n                                characters.\n                            </strong>\n                        </p>\n                    )}\n                    <button disabled={!formIsValid}>Login</button>\n                </form>\n            </section>\n        </main>\n    );\n};\n\nexport default Auth;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from 'react';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport UserProfile from './components/UserProfile';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n    return (\n        <Fragment>\n            <Header />\n            {!isAuthenticated && <Auth />}\n            {isAuthenticated && <UserProfile />}\n        </Fragment>\n    );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        },\r\n    },\r\n});\r\n\r\nconst counterReducer = counterSlice.reducer;\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default counterReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './auth';\r\nimport counterReducer from './counter';\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__2tBaJ\",\"control\":\"Auth_control__2WsPk\",\"invalid\":\"Auth_invalid__2f7j4\",\"error\":\"Auth_error__1akWE\"};"],"sourceRoot":""}